diff --git a/native/src/seal/ckks.cpp b/native/src/seal/ckks.cpp
index 62fd08e..8ef8b00 100644
--- a/native/src/seal/ckks.cpp
+++ b/native/src/seal/ckks.cpp
@@ -110,7 +110,7 @@ namespace seal
         int coeff_bit_count = static_cast<int>(log2(fabs(value))) + 2;
         if (coeff_bit_count >= context_data.total_coeff_modulus_bit_count())
         {
-            throw invalid_argument("encoded value is too large");
+            // throw invalid_argument("encoded value is too large");
         }

         double two_pow_64 = pow(2.0, 64);
@@ -237,7 +237,7 @@ namespace seal
         int coeff_bit_count = get_significant_bit_count(static_cast<uint64_t>(llabs(value))) + 2;
         if (coeff_bit_count >= context_data.total_coeff_modulus_bit_count())
         {
-            throw invalid_argument("encoded value is too large");
+            // throw invalid_argument("encoded value is too large");
         }

         // Resize destination to appropriate size
diff --git a/native/src/seal/ckks.h b/native/src/seal/ckks.h
index 73cea1f..8c4e402 100644
--- a/native/src/seal/ckks.h
+++ b/native/src/seal/ckks.h
@@ -512,7 +512,7 @@ namespace seal
             int max_coeff_bit_count = static_cast<int>(std::ceil(std::log2(std::max<>(max_coeff, 1.0)))) + 1;
             if (max_coeff_bit_count >= context_data.total_coeff_modulus_bit_count())
             {
-                throw std::invalid_argument("encoded values are too large");
+                // throw std::invalid_argument("encoded values are too large");
             }

             double two_pow_64 = std::pow(2.0, 64);
